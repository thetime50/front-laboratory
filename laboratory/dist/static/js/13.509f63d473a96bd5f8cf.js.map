{"version":3,"sources":["webpack:///src/page/threejs/verticesGeometry/vertices.vue","webpack:///./src/page/threejs/verticesGeometry/vertices.vue?7d52","webpack:///./src/page/threejs/verticesGeometry/vertices.vue"],"names":["verticesGeometry_vertices","name","data","renderFun","para","meshIndex","vertexColors","normal","meshOptions","text","value","mounted","_this","this","$nextTick","init","computed","getMesh","geometry","mixin","arguments","length","undefined","material","external__THREE_","extends_default","side","size","methods","render","onResize","_this2","el","$refs","three","firstChild","removeChild","scene","vertices","Float32Array","attribue","attributes","position","colors","color","normals","mesh","add","axisHelper","point","set","ambient","k","clientWidth","clientHeight","s","camera","lookAt","renderer","setClearColor","appendChild","domElement","width","height","setSize","addEventListener","watch","handler","after","before","deep","threejs_verticesGeometry_vertices","_vm","_h","$createElement","_c","_self","staticClass","attrs","label","model","callback","$$v","$set","expression","_l","item","index","key","_v","_s","directives","rawName","arg","ref","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"2IA6BAA,cACAC,KAAA,WACAC,KAFA,WAGA,OACAC,UAAA,KACAC,MACAC,UAAA,EACAC,cAAA,EACAC,QAAA,GAEAC,cACAC,KAAA,kBAAAC,MAAA,IACAD,KAAA,kBAAAC,MAAA,IACAD,KAAA,OAAAC,MAAA,IACAD,KAAA,OAAAC,MAAA,MAIAC,QAlBA,WAkBA,IAAAC,EAAAC,KACAA,KAAAC,UAAA,WACAF,EAAAG,UAGAC,UACAC,QADA,WAgDA,OA3CA,SAAAC,GAAA,IAAAC,EAAAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,MACAG,EAAA,IAAAC,EAAA,kBAAAC,OACAN,GACAO,KAAAF,EAAA,cAEA,WAAAA,EAAA,KAAAN,EAAAK,IAGA,SAAAL,GAAA,IAAAC,EAAAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,MAKAG,EAAA,IAAAC,EAAA,oBAAAC,OACAN,GACAO,KAAAF,EAAA,cAEA,WAAAA,EAAA,KAAAN,EAAAK,IAGA,SAAAL,EAAAC,GAKA,IAAAI,EAAA,IAAAC,EAAA,eAAAC,OACAN,GACAQ,KAAA,KAEA,WAAAH,EAAA,OAAAN,EAAAK,IAGA,SAAAL,EAAAC,GAKA,IAAAI,EAAA,IAAAC,EAAA,kBAAAC,OACAN,IAEA,WAAAK,EAAA,KAAAN,EAAAK,KAGAV,KAAAT,KAAAC,aAGAuB,SACAC,OADA,WAEAhB,KAAAV,WAAAU,KAAAV,aAEA2B,SAJA,aAOAf,KAPA,WAOA,IAAAgB,EAAAlB,KAEAmB,EAAAnB,KAAAoB,MAAAC,MAEAF,EAAAG,YACAH,EAAAI,YAAAJ,EAAAG,YAOA,IAAAE,EAAA,IAAAb,EAAA,MAIAN,EAAA,IAAAM,EAAA,eAGAc,EAAA,IAAAC,cACA,MACA,OACA,QAEA,QACA,QAEA,SAGAC,EAAA,IAAAhB,EAAA,gBAAAc,EAAA,GAEApB,EAAAuB,WAAAC,SAAAF,EAEA,IAAAG,EAAA,IAAAJ,cACA,MACA,MACA,MAEA,MACA,MACA,QAMA,GAHArB,EAAAuB,WAAAG,MAAA,IAAApB,EAAA,gBAAAmB,EAAA,GAGA9B,KAAAT,KAAAG,OAAA,CACA,IAAAsC,EAAA,IAAAN,cACA,MACA,MACA,MAEA,MACA,MACA,QAGArB,EAAAuB,WAAAlC,OAAA,IAAAiB,EAAA,gBAAAqB,EAAA,GA6BA,GAAAhC,KAAAT,KAAAE,aACA,IAAAwC,EAAAjC,KAAAI,QAAAC,GAAAZ,aAAAkB,EAAA,oBAEAsB,EAAAjC,KAAAI,QAAAC,GAAA0B,MAAA,MAIAP,EAAAU,IAAAD,GAIA,IAAAE,EAAA,IAAAxB,EAAA,gBACAa,EAAAU,IAAAC,GAMA,IAAAC,EAAA,IAAAzB,EAAA,qBACAyB,EAAAP,SAAAQ,IAAA,aACAb,EAAAU,IAAAE,GAEA,IAAAE,EAAA,IAAA3B,EAAA,sBACAa,EAAAU,IAAAI,GAMA,IAEAC,EAFAvC,KAAAoB,MAAAC,MAAAmB,YACAxC,KAAAoB,MAAAC,MAAAoB,aAEAC,EAAA,IAEAC,EAAA,IAAAhC,EAAA,oBAAA+B,EAAAH,EAAAG,EAAAH,EAAAG,KAAA,OACAC,EAAAd,SAAAQ,IAAA,aACAM,EAAAC,OAAApB,EAAAK,UAIA,IAAAgB,EAAA,IAAAlC,EAAA,cAEAkC,EAAAC,cAAA,YACA9C,KAAAoB,MAAAC,MAAA0B,YAAAF,EAAAG,YAEAhD,KAAAV,UAAA,WACA,IAAA2D,EAAA/B,EAAAE,MAAAC,MAAAmB,YACAU,EAAAhC,EAAAE,MAAAC,MAAAoB,aAGAI,EAAAM,QAAAF,EAAAC,GACAL,EAAA7B,OAAAQ,EAAAmB,IAMA3C,KAAAV,YAEA,IAAAqB,EAAA,cAAAgC,EAAAE,EAAAG,YAEAI,iBAAA,SAAApD,KAAAV,aAGA+D,OAIA9D,MACA+D,QADA,SACAC,EAAAC,GACAxD,KAAAE,QAEAuD,MAAA,MC1QeC,GADE1C,OAFjB,WAA0B,IAAA2C,EAAA3D,KAAa4D,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,mCAA6CF,EAAA,WAAgBE,YAAA,cAAwBF,EAAA,gBAAqBG,OAAOC,MAAA,MAAYJ,EAAA,kBAAuBK,OAAOtE,MAAA8D,EAAApE,KAAA,UAAA6E,SAAA,SAAAC,GAAoDV,EAAAW,KAAAX,EAAApE,KAAA,YAAA8E,IAAqCE,WAAA,mBAA8BZ,EAAAa,GAAAb,EAAA,qBAAAc,EAAAC,GAA+C,OAAAZ,EAAA,YAAsBa,IAAAD,EAAAT,OAAiBC,MAAAO,EAAA5E,SAAoB8D,EAAAiB,GAAA,2BAAAjB,EAAAkB,GAAAJ,EAAA7E,MAAA,4BAAgF,OAAA+D,EAAAiB,GAAA,KAAAd,EAAA,gBAAwCG,OAAOC,MAAA,MAAYJ,EAAA,eAAoBK,OAAOtE,MAAA8D,EAAApE,KAAA,aAAA6E,SAAA,SAAAC,GAAuDV,EAAAW,KAAAX,EAAApE,KAAA,eAAA8E,IAAwCE,WAAA,uBAAiCZ,EAAAiB,GAAA,UAAAjB,EAAAiB,GAAA,KAAAd,EAAA,eAAiDK,OAAOtE,MAAA8D,EAAApE,KAAA,OAAA6E,SAAA,SAAAC,GAAiDV,EAAAW,KAAAX,EAAApE,KAAA,SAAA8E,IAAkCE,WAAA,iBAA2BZ,EAAAiB,GAAA,wBAAAjB,EAAAiB,GAAA,KAAAd,EAAA,OAAuDgB,aAAa1F,KAAA,SAAA2F,QAAA,oBAAAlF,MAAA8D,EAAA,SAAAY,WAAA,WAAAS,IAAA,aAAoGhB,YAAA,yBAAqCF,EAAA,OAAYmB,IAAA,QAAAjB,YAAA,wBAA2C,IAErqCkB,oBCCjB,IAcAC,EAdyBC,EAAQ,OAcjCC,CACElG,EACAuE,GATF,EAVA,SAAA4B,GACEF,EAAQ,SAaV,kBAEA,MAUeG,EAAA,QAAAJ,EAAiB","file":"static/js/13.509f63d473a96bd5f8cf.js","sourcesContent":["<template>\r\n<div class=\"component-vertices flex-layout\">\r\n    <el-form class=\"flex-none\"> <!-- :model=\"\" -->\r\n        <el-form-item label=\"\">\r\n            <el-radio-group v-model=\"para.meshIndex\">\r\n                <el-radio v-for=\"(item,index) in meshOptions\" :label=\"item.value\" :key=\"index\">\r\n                    {{item.text}}\r\n                </el-radio>\r\n            </el-radio-group>      \r\n        </el-form-item>\r\n        <el-form-item label=\"\">\r\n            <el-checkbox v-model=\"para.vertexColors\">顶点着色</el-checkbox>\r\n            <el-checkbox v-model=\"para.normal\">法向量(漫反射渲染)</el-checkbox>\r\n        </el-form-item>\r\n        \r\n    </el-form>\r\n    <div class=\"three-wrap flex-auto\" v-resize:throttle=\"onResize\">\r\n        \r\n        <div class=\"three full-block\" \r\n            ref=\"three\"></div>    \r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\n/* message */\r\nimport * as THREE from \"THREE\"\r\nimport \"THREE/examples/js/controls/OrbitControls.js\"\r\n\r\nexport default {\r\n    name: \"vertices\",\r\n    data () {\r\n        return {\r\n            renderFun:null,\r\n            para:{\r\n                meshIndex:0,\r\n                vertexColors:false,\r\n                normal:false,\r\n            },\r\n            meshOptions:[\r\n                {text:'basic 三角面(网格)渲染',value:0},\r\n                {text:'漫反射渲染 (需要有法线数据)',value:1},\r\n                {text:'点渲染模',value:2},\r\n                {text:'线条渲染',value:3},\r\n            ],\r\n        };\r\n    },\r\n    mounted(){\r\n        this.$nextTick(()=>{\r\n            this.init()\r\n        })\r\n    },\r\n    computed:{\r\n        getMesh(){\r\n            //*highlight\r\n            let map=[\r\n                //基础网格材质对象 不受光照影响  没有棱角感\r\n                (geometry,mixin={})=>{\r\n                    let material = new THREE.MeshBasicMaterial({\r\n                        ...mixin,\r\n                        side: THREE.DoubleSide //两面可见\r\n                    }); //材质对象\r\n                    return new THREE.Mesh(geometry, material); //网格模型对象Mesh\r\n                },\r\n                // 与光照计算  漫反射   产生棱角感 //需要有法线数据\r\n                (geometry,mixin={})=>{\r\n                    /**\r\n                     * 创建网格模型\r\n                     */\r\n                    // 三角面(网格)渲染模式\r\n                    let material = new THREE.MeshLambertMaterial({\r\n                        ...mixin,\r\n                        side: THREE.DoubleSide //两面可见\r\n                    }); //材质对象\r\n                    return new THREE.Mesh(geometry, material); //网格模型对象Mesh\r\n                },\r\n                // 与光照计算  高光效果（镜面反射）    产生棱角感\r\n                (geometry,mixin)=>{\r\n                    /**\r\n                     * 创建网格模型\r\n                     */\r\n                    // 点渲染模式\r\n                    let material = new THREE.PointsMaterial({\r\n                        ...mixin,\r\n                        size: 5.0 //点对象像素尺寸\r\n                    }); //材质对象\r\n                    return new THREE.Points(geometry, material); //点模型对象\r\n                },\r\n                // 与光照计算  高光效果（镜面反射）    产生棱角感\r\n                (geometry,mixin)=>{\r\n                    /**\r\n                     * 创建网格模型\r\n                     */\r\n                    // 线条渲染模式\r\n                    let material = new THREE.LineBasicMaterial({\r\n                        ...mixin,\r\n                    });//材质对象\r\n                    return new THREE.Line(geometry,material);//线条模型对象\r\n                },\r\n            ]\r\n            return map[this.para.meshIndex]\r\n        },\r\n    },\r\n    methods:{\r\n        render(){\r\n            this.renderFun && this.renderFun()\r\n        },\r\n        onResize(){\r\n            // this.render()\r\n        },\r\n        init(){\r\n            \r\n            let el = this.$refs.three\r\n            // let el = document.querySelector('#material')\r\n            if(el.firstChild){\r\n                el.removeChild(el.firstChild)\r\n            }\r\n\r\n\r\n            /**\r\n             * 创建场景对象Scene\r\n             */\r\n            let scene = new THREE.Scene();\r\n            /**\r\n             * 创建网格模型\r\n             */\r\n            var geometry = new THREE.BufferGeometry(); //创建一个Buffer类型几何体对象\r\n            //*highlight\r\n            //类型数组创建顶点数据\r\n            var vertices = new Float32Array([\r\n                0, 0, 0, //顶点1坐标\r\n                50, 0, 0, //顶点2坐标\r\n                0, 100, 0, //顶点3坐标\r\n                // 0, 0, 10, //顶点4坐标\r\n                0, 0, -30, //顶点4坐标\r\n                0, 0, 100, //顶点5坐标\r\n                // 50, 0, 10, //顶点6坐标\r\n                50, 0, 0, //顶点6坐标\r\n            ]);\r\n            // 创建属性缓冲区对象\r\n            var attribue = new THREE.BufferAttribute(vertices, 3); //3个为一组，表示一个顶点的xyz坐标\r\n            // 设置几何体attributes属性的位置属性\r\n            geometry.attributes.position = attribue;\r\n\r\n            var colors = new Float32Array([\r\n                1, 0, 0, //顶点1颜色\r\n                0, 1, 0, //顶点2颜色\r\n                0, 0, 1, //顶点3颜色\r\n\r\n                1, 1, 0, //顶点4颜色\r\n                0, 1, 1, //顶点5颜色\r\n                1, 0, 1, //顶点6颜色\r\n            ]);\r\n            // 设置几何体attributes属性的颜色color属性\r\n            geometry.attributes.color = new THREE.BufferAttribute(colors, 3); //3个为一组,表示一个顶点的颜色数据RGB\r\n\r\n            //*highlight\r\n            if(this.para.normal){// 无法向量时显示黑色是threejs版本问题\r\n                var normals = new Float32Array([\r\n                    0, 0, 1, //顶点1法向量\r\n                    0, 0, 1, //顶点2法向量\r\n                    0, 0, 1, //顶点3法向量\r\n\r\n                    0, 1, 0, //顶点4法向量\r\n                    0, 1, 0, //顶点5法向量\r\n                    0, 1, 0, //顶点6法向量\r\n                ]);\r\n                // 设置几何体attributes属性的位置normal属性\r\n                geometry.attributes.normal = new THREE.BufferAttribute(normals, 3); //3个为一组,表示一个顶点的法向量数据\r\n            }\r\n\r\n            // // 三角面(网格)渲染模式\r\n            // var material = new THREE.MeshBasicMaterial({\r\n            // color: 0x0000ff, //三角面颜色\r\n            // side: THREE.DoubleSide //两面可见\r\n            // }); //材质对象\r\n            // var mesh = new THREE.Mesh(geometry, material); //网格模型对象Mesh\r\n            // scene.add(mesh); //网格模型添加到场景中\r\n\r\n            // // 点渲染模式\r\n            // // var material = new THREE.PointsMaterial({\r\n            // //   color: 0xff0000,\r\n            // //   size: 5.0 //点对象像素尺寸\r\n            // // }); //材质对象\r\n            // // var points = new THREE.Points(geometry, material); //点模型对象\r\n            // // scene.add(points); //点对象添加到场景中\r\n\r\n            // // 线条渲染模式\r\n            // // var material=new THREE.LineBasicMaterial({\r\n            // //     color:0xff0000 //线条颜色\r\n            // // });//材质对象\r\n            // // var line=new THREE.Line(geometry,material);//线条模型对象\r\n            // // scene.add(line);//线条对象添加到场景中\r\n            \r\n            // var mesh = this.getMesh(geometry,0x0000ff)\r\n\r\n            //*highlight\r\n            if(this.para.vertexColors){\r\n                var mesh = this.getMesh(geometry,{vertexColors: THREE.VertexColors})\r\n            }else{\r\n                var mesh = this.getMesh(geometry,{color:0x0000ff})\r\n            }\r\n            // vertexColors\r\n            // 是否使用顶点着色。默认值为THREE.NoColors。 其他选项有THREE.VertexColors 和 THREE.FaceColors。\r\n            scene.add(mesh); //网格模型添加到场景中\r\n\r\n\r\n            // 辅助坐标系\r\n            var axisHelper = new THREE.AxisHelper(250);\r\n            scene.add(axisHelper);\r\n\r\n            /**\r\n             * 光源设置\r\n             */\r\n            //点光源\r\n            let point = new THREE.PointLight(0xffffff);\r\n            point.position.set(400, 200, 300); //点光源位置\r\n            scene.add(point); //点光源添加到场景中\r\n            //环境光 // 各向均匀的 环境光颜色与网格模型的颜色进行RGB进行乘法运算\r\n            let ambient = new THREE.AmbientLight(0x808080);\r\n            scene.add(ambient);\r\n            // console.log(scene)\r\n            // console.log(scene.children)\r\n            /**\r\n             * 相机设置\r\n             */\r\n            let width = this.$refs.three.clientWidth; //窗口宽度\r\n            let height = this.$refs.three.clientHeight; //窗口高度\r\n            let k = width / height; //窗口宽高比\r\n            let s = 200; //三维场景显示范围控制系数，系数越大，显示的范围越大\r\n            //创建相机对象\r\n            let camera = new THREE.OrthographicCamera(-s * k, s * k, s, -s, 1, 1000);\r\n            camera.position.set(200, 300, 200); //设置相机位置\r\n            camera.lookAt(scene.position); //设置相机方向(指向的场景对象)\r\n            /**\r\n             * 创建渲染器对象\r\n             */\r\n            let renderer = new THREE.WebGLRenderer();\r\n            // renderer.setSize(width, height);//设置渲染区域尺寸\r\n            renderer.setClearColor(0xb9d3ff, 1); //设置背景颜色\r\n            this.$refs.three.appendChild(renderer.domElement); //body元素中插入canvas对象\r\n            //执行渲染操作   指定场景、相机作为参数\r\n            this.renderFun = ()=>{\r\n                let width = this.$refs.three.clientWidth; //窗口宽度\r\n                let height = this.$refs.three.clientHeight; //窗口高度\r\n                //set camera\r\n\r\n                renderer.setSize(width, height);//设置渲染区域尺寸\r\n                renderer.render(scene, camera);\r\n                \r\n            }\r\n\r\n            \r\n            // 渲染函数\r\n            this.renderFun()\r\n            //创建控件对象  相机对象camera作为参数   控件可以监听鼠标的变化，改变相机对象的属性\r\n            let controls = new THREE.OrbitControls(camera,renderer.domElement);\r\n            //监听鼠标事件，触发渲染函数，更新canvas画布渲染效果\r\n            controls.addEventListener('change', this.renderFun);//移动相机\r\n        },\r\n    },\r\n    watch:{\r\n        // getMesh(after,before){\r\n        //     this.init()\r\n        // },\r\n        para:{\r\n            handler(after,before){\r\n                this.init()\r\n            },\r\n            deep:true,\r\n            // immediate:true,\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\r\n.component-vertices{\r\n    // \r\n}\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/page/threejs/verticesGeometry/vertices.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"component-vertices flex-layout\"},[_c('el-form',{staticClass:\"flex-none\"},[_c('el-form-item',{attrs:{\"label\":\"\"}},[_c('el-radio-group',{model:{value:(_vm.para.meshIndex),callback:function ($$v) {_vm.$set(_vm.para, \"meshIndex\", $$v)},expression:\"para.meshIndex\"}},_vm._l((_vm.meshOptions),function(item,index){return _c('el-radio',{key:index,attrs:{\"label\":item.value}},[_vm._v(\"\\r\\n                    \"+_vm._s(item.text)+\"\\r\\n                \")])}),1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"\"}},[_c('el-checkbox',{model:{value:(_vm.para.vertexColors),callback:function ($$v) {_vm.$set(_vm.para, \"vertexColors\", $$v)},expression:\"para.vertexColors\"}},[_vm._v(\"顶点着色\")]),_vm._v(\" \"),_c('el-checkbox',{model:{value:(_vm.para.normal),callback:function ($$v) {_vm.$set(_vm.para, \"normal\", $$v)},expression:\"para.normal\"}},[_vm._v(\"法向量(漫反射渲染)\")])],1)],1),_vm._v(\" \"),_c('div',{directives:[{name:\"resize\",rawName:\"v-resize:throttle\",value:(_vm.onResize),expression:\"onResize\",arg:\"throttle\"}],staticClass:\"three-wrap flex-auto\"},[_c('div',{ref:\"three\",staticClass:\"three full-block\"})])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-403fdeac\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/page/threejs/verticesGeometry/vertices.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-403fdeac\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./vertices.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./vertices.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./vertices.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-403fdeac\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./vertices.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-403fdeac\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/page/threejs/verticesGeometry/vertices.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}