{"version":3,"sources":["webpack:///./src/page/threejs/verticesGeometry/verticesIndex.vue?9489","webpack:///src/page/threejs/verticesGeometry/verticesIndex.vue","webpack:///./src/page/threejs/verticesGeometry/verticesIndex.vue?75b4","webpack:///./src/page/threejs/verticesGeometry/verticesIndex.vue","webpack:///./node_modules/core-js/modules/es.typed-array.uint16-array.js","webpack:///./src/page/threejs/verticesGeometry/verticesIndex.vue?429b"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","directives","name","rawName","value","expression","arg","ref","staticRenderFns","component","createTypedArrayConstructor","init","data","byteOffset","length"],"mappings":"yHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,wCAAwC,CAACF,EAAG,MAAM,CAACG,WAAW,CAAC,CAACC,KAAK,SAASC,QAAQ,oBAAoBC,MAAOV,EAAY,SAAEW,WAAW,WAAWC,IAAI,aAAaN,YAAY,wBAAwB,CAACF,EAAG,MAAM,CAACS,IAAI,QAAQP,YAAY,0BAC/VQ,EAAkB,G,kRCoBtB,G,UAAA,CACE,KAAF,iBACE,KAFF,WAGI,MAAJ,CACM,UAAN,KACM,KAAN,KAKE,QAVF,WAUI,IAAJ,OACI,KAAJ,sBACM,EAAN,WAGE,SAAF,GAGE,QAAF,CACI,OADJ,WAEM,KAAN,6BAEI,SAJJ,aAOI,KAPJ,WAOM,IAAN,OAEA,mBAEA,cACQ,EAAR,0BAOM,IAAN,iBAIA,0BAEA,oBACA,MACM,GAAN,IACM,GAAN,KACM,EAAN,OAGA,gCAEM,EAAN,sBACM,IAAN,oBACA,MACM,EAAN,IACM,EAAN,IACM,EAAN,MAGM,EAAN,gDAIM,IAAN,mBACA,cAGM,EAAN,oCAEM,IAAN,gCACQ,MAAR,IACQ,KAAR,kBAEA,qBACM,EAAN,OAGM,IAAN,2BACM,EAAN,OAKM,IAAN,gCACM,EAAN,0BACM,EAAN,OAEM,IAAN,iCACM,EAAN,OAMM,IAAN,+BACA,gCACA,MACA,MAEA,mDACM,EAAN,0BACM,EAAN,mBAIM,IAAN,yBAEM,EAAN,0BACM,KAAN,sCAEM,KAAN,qBACQ,IAAR,4BACA,6BAGQ,EAAR,aACQ,EAAR,aAMM,KAAN,YAEM,IAAN,yCAEM,EAAN,4CAGE,MAAF,CAII,KAAJ,CACM,QADN,SACA,KACQ,KAAR,QAEM,MAAN,MC/JqX,I,wBCQjXC,EAAY,eACd,EACAhB,EACAe,GACA,EACA,KACA,WACA,MAIa,aAAAC,E,gCCnBf,IAAIC,EAA8B,EAAQ,QAI1CA,EAA4B,UAAU,SAAUC,GAC9C,OAAO,SAAqBC,EAAMC,EAAYC,GAC5C,OAAOH,EAAKhB,KAAMiB,EAAMC,EAAYC,Q,yDCNxC","file":"js/chunk-635d6638.7a9656ff.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"component-vertices-index flex-layout\"},[_c('div',{directives:[{name:\"resize\",rawName:\"v-resize:throttle\",value:(_vm.onResize),expression:\"onResize\",arg:\"throttle\"}],staticClass:\"three-wrap flex-auto\"},[_c('div',{ref:\"three\",staticClass:\"three full-block\"})])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n<div class=\"component-vertices-index flex-layout\">\n    <!-- <el-form class=\"flex-none\">\n        <el-form-item label=\"\">\n           \n        </el-form-item>\n        \n    </el-form> -->\n    <div class=\"three-wrap flex-auto\" v-resize:throttle=\"onResize\">\n        \n        <div class=\"three full-block\" \n            ref=\"three\"></div>    \n    </div>\n</div>\n</template>\n\n<script>\n/* message */\nimport * as THREE from \"THREE\"\nimport \"three/examples/js/controls/OrbitControls.js\"\n\nexport default {\n    name: \"vertices-index\",\n    data () {\n        return {\n            renderFun:null,\n            para:{\n                // \n            },\n        };\n    },\n    mounted(){\n        this.$nextTick(()=>{\n            this.init()\n        })\n    },\n    computed:{\n        // \n    },\n    methods:{\n        render(){\n            this.renderFun && this.renderFun()\n        },\n        onResize(){\n            // this.render()\n        },\n        init(){\n            \n            let el = this.$refs.three\n            // let el = document.querySelector('#material')\n            if(el.firstChild){\n                el.removeChild(el.firstChild)\n            }\n\n\n            /**\n             * 创建场景对象Scene\n             */\n            let scene = new THREE.Scene();\n            /**\n             * 创建网格模型\n             */\n            let geometry = new THREE.BufferGeometry(); //声明一个空几何体对象\n            //类型数组创建顶点位置position数据\n            let vertices = new Float32Array([\n                0, 0, 0, //顶点1坐标\n                80, 0, 0, //顶点2坐标\n                80, 80, 0, //顶点3坐标\n                0, 80, 0, //顶点4坐标\n            ]);\n            // 创建属性缓冲区对象\n            let attribue = new THREE.BufferAttribute(vertices, 3); //3个为一组\n            // 设置几何体attributes属性的位置position属性\n            geometry.attributes.position = attribue\n            let normals = new Float32Array([\n                0, 0, 1, //顶点1法向量\n                0, 0, 1, //顶点2法向量\n                0, 0, 1, //顶点3法向量\n                0, 0, 1, //顶点4法向量\n            ]);\n            // 设置几何体attributes属性的位置normal属性\n            geometry.attributes.normal = new THREE.BufferAttribute(normals, 3); //3个为一组,表示一个顶点的xyz坐标\n\n            //*highlight\n            // Uint16Array类型数组创建顶点索引数据\n            let indexes = new Uint16Array([\n                0, 1, 2, 0, 2, 3,\n            ])\n            // 索引数据赋值给几何体的index属性\n            geometry.index = new THREE.BufferAttribute(indexes, 1); //1个为一组\n            //材质对象\n            let material = new THREE.MeshLambertMaterial({\n                color: 0x0000ff, //三角面颜色\n                side: THREE.DoubleSide //两面可见\n            });\n            let mesh = new THREE.Mesh(geometry, material); //网格模型对象Mesh\n            scene.add(mesh); //网格模型添加到场景中\n\n            // 辅助坐标系\n            let axisHelper = new THREE.AxisHelper(250);\n            scene.add(axisHelper);\n            /**\n             * 光源设置\n             */\n            //点光源\n            let point = new THREE.PointLight(0xffffff);\n            point.position.set(400, 200, 300); //点光源位置\n            scene.add(point); //点光源添加到场景中\n            //环境光\n            let ambient = new THREE.AmbientLight(0x444444);\n            scene.add(ambient);\n            // console.log(scene)\n            // console.log(scene.children)\n            /**\n             * 相机设置\n             */\n            let width = this.$refs.three.clientWidth; //窗口宽度\n            let height = this.$refs.three.clientHeight; //窗口高度\n            let k = width / height; //窗口宽高比\n            let s = 200; //三维场景显示范围控制系数，系数越大，显示的范围越大\n            //创建相机对象\n            let camera = new THREE.OrthographicCamera(-s * k, s * k, s, -s, 1, 1000);\n            camera.position.set(200, 300, 200); //设置相机位置\n            camera.lookAt(scene.position); //设置相机方向(指向的场景对象)\n            /**\n             * 创建渲染器对象\n             */\n            let renderer = new THREE.WebGLRenderer();\n            // renderer.setSize(width, height);//设置渲染区域尺寸\n            renderer.setClearColor(0xb9d3ff, 1); //设置背景颜色\n            this.$refs.three.appendChild(renderer.domElement); //body元素中插入canvas对象\n            //执行渲染操作   指定场景、相机作为参数\n            this.renderFun = ()=>{\n                let width = this.$refs.three.clientWidth; //窗口宽度\n                let height = this.$refs.three.clientHeight; //窗口高度\n                //set camera\n\n                renderer.setSize(width, height);//设置渲染区域尺寸\n                renderer.render(scene, camera);\n                \n            }\n\n            \n            // 渲染函数\n            this.renderFun()\n            //创建控件对象  相机对象camera作为参数   控件可以监听鼠标的变化，改变相机对象的属性\n            let controls = new THREE.OrbitControls(camera,renderer.domElement);\n            //监听鼠标事件，触发渲染函数，更新canvas画布渲染效果\n            controls.addEventListener('change', this.renderFun);//移动相机\n        },\n    },\n    watch:{\n        // getMesh(after,before){\n        //     this.init()\n        // },\n        para:{\n            handler(after,before){\n                this.init()\n            },\n            deep:true,\n            // immediate:true,\n        }\n    },\n}\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n.component-vertices-index{\n    // \n}\n</style>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./verticesIndex.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./verticesIndex.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./verticesIndex.vue?vue&type=template&id=4aec3d4e&scoped=true&\"\nimport script from \"./verticesIndex.vue?vue&type=script&lang=js&\"\nexport * from \"./verticesIndex.vue?vue&type=script&lang=js&\"\nimport style0 from \"./verticesIndex.vue?vue&type=style&index=0&id=4aec3d4e&rel=stylesheet%2Fscss&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4aec3d4e\",\n  null\n  \n)\n\nexport default component.exports","var createTypedArrayConstructor = require('../internals/typed-array-constructor');\n\n// `Uint16Array` constructor\n// https://tc39.es/ecma262/#sec-typedarray-objects\ncreateTypedArrayConstructor('Uint16', function (init) {\n  return function Uint16Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./verticesIndex.vue?vue&type=style&index=0&id=4aec3d4e&rel=stylesheet%2Fscss&lang=scss&scoped=true&\""],"sourceRoot":""}